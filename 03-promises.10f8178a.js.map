{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,eAAMC,EAAOC,SAASC,cAAc,SAKpC,SAASC,EAAcC,EAAUC,GAE/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAEvBL,EAEFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,OAMzBL,EAAKY,iBAAiB,UAAWC,IAC/BA,EAAGC,oBAKLd,EAAKY,iBAAiB,UAAU,KAC9B,MAAMG,EAAYf,EAAKE,cAAc,wBAAwBc,MACvDC,EAAajB,EAAKE,cAAc,uBAAuBc,MAC7D,IAAIE,EAAUlB,EAAKE,cAAc,sBAAsBc,MAgBvD,SAASG,IAEP,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAWK,IAE9BC,YAAW,KAET,MAAMC,EAAcJ,GAAWE,EAAI,GAEnCjB,EAAciB,EAAGG,SAASN,GAAcK,GAAaE,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MAErEoB,EAAA3B,GAAS4B,OAAOC,QACb,uBAAqBvB,QAAiBC,UAExCuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAA3B,GAAS4B,OAAOG,QACb,sBAAoBzB,QAAeC,YAEzCa,EAAUE,GA7BjBC,YAAW,KACTlB,EAAc,EAAGc,GAAYO,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MAE7CoB,EAAA3B,GAAS4B,OAAOC,QACb,uBAAqBvB,QAAiBC,UAExCuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAA3B,GAAS4B,OAAOG,QACb,sBAAoBzB,QAAiBC,UACvCyB,QAAQX,KACZF","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst form = document.querySelector('.form')\nimport Notiflix from 'notiflix';\n\n\n\nfunction createPromise(position, delay) {\n\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n\n    if (shouldResolve) {\n\n      resolve({ position, delay })\n    } else {\n      reject({ position, delay })\n    }\n  })\n}\n\n\nform.addEventListener('submit', (ev) => {\n  ev.preventDefault();\n})\n\n\n\nform.addEventListener('submit', () => {\n  const amountVal = form.querySelector('input[name=\"amount\"]').value\n  const firstDelay = form.querySelector('input[name=\"delay\"]').value\n  var stepDel = form.querySelector('input[name=\"step\"]').value\n\n\n\n  setTimeout(() => {\n    createPromise(1, firstDelay).then(({ position, delay }) => {\n\n      Notiflix.Notify.success\n        (`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure\n          (`❌ Rejected promise ${position} in ${delay}ms`);\n      }).finally(doNext)\n  }, firstDelay)\n\n  function doNext() {\n\n    for (let i = 2; i <= amountVal; i++) {\n\n      setTimeout(() => {\n\n        const delayResult = stepDel * (i - 1);\n\n        createPromise(i, parseInt(firstDelay) + delayResult).then(({ position, delay }) => {\n\n          Notiflix.Notify.success\n            (`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure\n              (`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }, stepDel * i);\n    }\n  }\n}\n)\n\n\n\n\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","ev","preventDefault","amountVal","value","firstDelay","stepDel","doNext","i","setTimeout","delayResult","parseInt","then","$parcel$interopDefault","Notify","success","catch","failure","finally"],"version":3,"file":"03-promises.10f8178a.js.map"}