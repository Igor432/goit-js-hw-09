{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAAMC,EAAOC,SAASC,cAAc,SA4DpCF,EAAKG,iBAAiB,UAAU,SAACC,GAC/BA,EAAGC,oBAGLL,EAAKG,iBAAiB,UA3DtB,SAAuBG,EAAUC,GAC/B,IAAMC,EAAaR,EAAKE,cAAc,uBAAuBO,MACvDC,EAAYV,EAAKE,cAAc,sBAAsBO,MACrDE,EAASX,EAAKE,cAAc,wBAAwBO,MAE1DG,QAAQC,IAAIF,EAAQH,EAAYE,GAChC,IAAMI,EAAgBC,KAAKC,SAAW,GAwBtC,SAASC,IACP,IAAKC,EAAI,EAAGA,EAAIP,EAAQO,IAEtBC,YAAW,WACT,IAAIC,SAAQ,SAACC,EAASC,GAEhBR,EACFO,EAAQ,CAAEE,SAAc,EAAJL,EAAOM,MAAOd,IAElCY,EAAO,CAAEC,SAAc,EAAJL,EAAOM,MAAOd,OAElCe,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACnBG,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,UAErEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,YAEtEd,EAAYQ,GAvCnBC,YAAW,WACT,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAEvBR,EACFO,EAAQ,CAAEE,SAAU,EAAGC,MAAOhB,IAE9Bc,EAAO,CAAEC,SAAU,EAAGC,MAAOhB,OAI9BiB,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,UAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAuCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,UAEtES,QAAQhB,KAGVT,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst form = document.querySelector('.form')\nimport Notiflix from 'notiflix';\n\n\n\nfunction createPromise(position, delay) {\n  const firstDelay = form.querySelector('input[name=\"delay\"]').value\n  const stepDelay = form.querySelector('input[name=\"step\"]').value\n  const amount = form.querySelector('input[name=\"amount\"]').value\n\n  console.log(amount, firstDelay, stepDelay);\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n    return new Promise((resolve, reject) => {\n\n      if (shouldResolve) {\n        resolve({ position: 0, delay: firstDelay })\n      } else {\n        reject({ position: 0, delay: firstDelay });\n      }\n    }\n    )\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(doNext);\n\n\n  }, firstDelay)\n\n\n  function doNext() {\n    for (i = 1; i < amount; i++) {\n\n      setTimeout(() => {\n        new Promise((resolve, reject) => {\n\n          if (shouldResolve) {\n            resolve({ position: i * 1, delay: stepDelay })\n          } else {\n            reject({ position: i * 1, delay: stepDelay });\n          }\n        }).then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }, stepDelay * i)\n\n\n    }\n  }\n\n}\n\nform.addEventListener('submit', (ev) => {\n  ev.preventDefault();\n})\n\nform.addEventListener('submit', createPromise)\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","ev","preventDefault","position1","delay1","firstDelay","value","stepDelay","amount","console","log","shouldResolve","Math","random","doNext","i","setTimeout","Promise","resolve","reject","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning","finally"],"version":3,"file":"03-promises.1b5f651e.js.map"}