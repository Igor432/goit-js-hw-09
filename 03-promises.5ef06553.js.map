{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAAMC,EAAOC,SAASC,cAAc,SAKpC,SAASC,EAAcC,EAAUC,GAE/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAEvBL,EAEFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,aAMzBL,EAAKY,iBAAiB,UAAU,SAACC,GAC/BA,EAAGC,oBAKLd,EAAKY,iBAAiB,UAAU,WAC9B,IAAMG,EAAYf,EAAKE,cAAc,wBAAwBc,MACvDC,EAAajB,EAAKE,cAAc,uBAAuBc,MACzDE,EAAUlB,EAAKE,cAAc,sBAAsBc,MAgBvD,SAASG,IAEP,I,kBAEEC,YAAW,WAET,IAAMC,EAAcH,GAAWI,EAAI,GAEnCnB,EAAcmB,EAAGC,SAASN,GAAcI,GAAaG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAErEqB,EAAA5B,GAAS6B,OAAOC,QACb,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,UAEhDyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QACb,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,YAEjDa,EAAUI,IAfNU,EAAI,EAAGA,GAAKjB,EAAWiB,IAAGC,EAAAD,GAdrCZ,YAAW,WACTjB,EAAc,EAAGc,GAAYO,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAE7CqB,EAAA5B,GAAS6B,OAAOC,QACb,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,UAEhDyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QACb,sBAAuCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,UAC/C6B,QAAQf,KACZF,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst form = document.querySelector('.form')\nimport Notiflix from 'notiflix';\n\n\n\nfunction createPromise(position, delay) {\n\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n\n    if (shouldResolve) {\n\n      resolve({ position, delay })\n    } else {\n      reject({ position, delay })\n    }\n  })\n}\n\n\nform.addEventListener('submit', (ev) => {\n  ev.preventDefault();\n})\n\n\n\nform.addEventListener('submit', () => {\n  const amountVal = form.querySelector('input[name=\"amount\"]').value\n  const firstDelay = form.querySelector('input[name=\"delay\"]').value\n  var stepDel = form.querySelector('input[name=\"step\"]').value\n\n\n\n  setTimeout(() => {\n    createPromise(1, firstDelay).then(({ position, delay }) => {\n\n      Notiflix.Notify.success\n        (`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure\n          (`❌ Rejected promise ${position} in ${delay}ms`);\n      }).finally(doNext)\n  }, firstDelay)\n\n  function doNext() {\n\n    for (let i = 2; i <= amountVal; i++) {\n\n      setTimeout(() => {\n\n        const delayResult = stepDel * (i - 1);\n\n        createPromise(i, parseInt(firstDelay) + delayResult).then(({ position, delay }) => {\n\n          Notiflix.Notify.success\n            (`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure\n              (`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }, stepDel * i);\n    }\n  }\n}\n)\n\n\n\n\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","ev","preventDefault","amountVal","value","firstDelay","stepDel","doNext","setTimeout","delayResult","i","parseInt","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","i1","_loop","finally"],"version":3,"file":"03-promises.5ef06553.js.map"}